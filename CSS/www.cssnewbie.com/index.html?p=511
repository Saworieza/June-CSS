<!DOCTYPE HTML>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>How To Emulate a Foreach Loop in JavaScript</title>
    <link rel="icon" href="wp-content/themes/cssnewbie_v4/img/favicon-96x96.png" />
    <link rel="pingback" href="xmlrpc.php" />
	<link rel="alternate" type="application/rss+xml" href="feed/index.html" title="CSS Newbie" />
	<link href='http://fonts.googleapis.com/css?family=Raleway:400,900,700|Source+Sans+Pro:400,700' rel='stylesheet' type='text/css'>
	<script src="wp-content/themes/cssnewbie_v4/js/modernizr.custom.js"></script>
	<link rel="alternate" type="application/rss+xml" title="CSS Newbie &raquo; How To Emulate a Foreach Loop in JavaScript Comments Feed" href="emulate-a-foreach-loop-in-javascript/feed/index.html" />
<link rel='stylesheet' id='cssnewbiev4-style-css'  href='wp-content/themes/cssnewbie_v4/style.css?ver=3.8.1' type='text/css' media='all' />
<link rel='stylesheet' id='font-awesome-styles-css'  href='wp-content/plugins/font-awesome/assets/css/font-awesome.min.css?ver=3.2.1' type='text/css' media='all' />
<!--[if lte IE 7]>
<link rel='stylesheet' id='font-awesome-ie7-css'  href='http://www.cssnewbie.com/wp-content/plugins/font-awesome/assets/css/font-awesome-ie7.min.css?ver=3.2.1' type='text/css' media='all' />
<![endif]-->
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="wp-includes/wlwmanifest.xml" /> 
<link rel='prev' title='Improve Usability and CTR: Make an Entire List Item Clickable' href='index.html?p=501' />
<link rel='next' title='The Simple Secret to Good Dropdown Navigation' href='index.html?p=518' />
<meta name="generator" content="WordPress 3.8.1" />
<link rel='canonical' href='index.html?p=511' />
<link rel='shortlink' href='index.html?p=511' />
<style type="text/css">
ul.scfw_16px li, ul.scfw_24px li, ul.scfw_32px li, ul.scfw_16px li a, ul.scfw_24px li a, ul.scfw_32px li a {
	display:inline !important;
	float:none !important;
	border:0 !important;
	background:transparent none !important;
	margin:0 !important;
	padding:0 !important;
}
ul.scfw_16px li {
	margin:0 2px 0 0 !important;
}
ul.scfw_24px li {
	margin:0 3px 0 0 !important;
}
ul.scfw_32px li {
	margin:0 5px 0 0 !important;
}
ul.scfw_text_img li:before, ul.scfw_16px li:before, ul.scfw_24px li:before, ul.scfw_32px li:before {
	content:none !important;
}
.scfw img {
	float:none !important;
}
</style>	
	
<!-- All in One SEO Pack 2.1.2 by Michael Torbert of Semper Fi Web Design[151,210] -->
<meta name="description" content="I have trouble with JavaScript array and array-manipulation. JavaScript lacks a specific foreach contstruct, which trips me up. Here's how to fake it." />

<meta name="keywords" content="javascript foreach, for each statement, js foreach statement, jquery foreach,javascript,jquery,tip,tutorial,basic techniques" />

<!-- /all in one seo pack -->
</head>
<body id="top" class="single single-post postid-511 single-format-standard">
<!-- BuySellAds Ad Code -->
<script type="text/javascript">
(function(){
  var bsa = document.createElement('script');
     bsa.type = 'text/javascript';
     bsa.async = true;
     bsa.src = 'http://s3.buysellads.com/ac/bsa.js';
  (document.getElementsByTagName('head')[0]||document.getElementsByTagName('body')[0]).appendChild(bsa);
})();
</script>
<!-- End BuySellAds Ad Code -->
	<div class="wrap">
    	<div class="header" role="banner">
        	<a href="index.html"><h1 class="site-logo">CSS <strong>newbie</strong></h1></a>
        	<h2 class="subtitle">A resource about building the modern web. Authored by Rob Glazebrook.</h2>
        	<nav role="navigation">
        		<ul>
        			<li><a href="index.html">Home</a></li>
        			<li><a href="index.html?p=250">Table of Contents</a></li>
        			<li><a href="http://feeds.feedburner.com/cssnewbie/">Subscribe</a></li>
        			<li><form action="index.html" method="get" class="search-form">
    <fieldset>
        <label for="search">Search</label>
        <input type="text" name="s" id="search" class="search-field" placeholder="Search..." value="" />
        <input type="submit" id="searchsubmit" class="search-submit" value="Search" />
    </fieldset>
</form></li>
        		</ul>
        	</nav>
        </div>
        <div class="content grid grid-pad"><div class="col-2-3 well" role="main">
<div class="ad top_banner_ad">
<!-- BuySellAds Zone Code -->
<div id="bsap_1246791" class="bsarocks bsap_3de9dd67d1e9d49a7cec8c1a10bdb917"></div>
<!-- End BuySellAds Zone Code -->
</div>
	<article id="post-511" class="post-511 post type-post status-publish format-standard hentry category-basic-techniques category-javascript tag-javascript tag-jquery tag-tip tag-tutorial">

	<h2 class="entry-title">
		<a href="index.html?p=511" title="Permalink to How To Emulate a Foreach Loop in JavaScript" rel="bookmark">How To Emulate a Foreach Loop in JavaScript</a>
	</h2>
	<div class="meta">
		<p>Published January 21, 2010 by Rob Glazebrook.</p>
	</div>	<div class="entry-content">
		<p>JavaScript does many things well, but one area I&#8217;ve always had trouble with is the array and array-manipulation department. For example, this weekend I was working on a project that required me to iterate through a JavaScript array and peform a set of functions on the values within. In PHP, that would have looked something like this:</p>
<pre lang="php" escaped="true" line="1">$myArray = array(&quot;item 1&quot;, &quot;item 2&quot;, item 3&quot;);
foreach($myArray as $item) {
	$item = &quot;Do Something Here&quot;;
}</pre>
<p>Nice and simple, right? All we&#8217;re doing is iterating through the array with the foreach() construct and replacing each item with the phrase &#8220;Do Something Here,&#8221; but you can see how this could/would expand. A similar construct exists in Perl, another language I grew up on. </p>
<p>But JavaScript lacks a specific &#8220;foreach&#8221; statement, which trips me up every time. So how do we fake it? <span id="more-511"></span></p>
<h3>Plain-Jane JavaScript Foreach</h3>
<p>In JavaScript, we make use of the for() loop construct to fake a foreach scenario. It looks something like this:</p>
<pre lang="javascript" escaped="true" line="1">myArray = new Array(&quot;item 1&quot;, &quot;item 2&quot;, &quot;item 3&quot;);
for(i=0; i&lt;myArray.length; i++) {
	myArray[i] = &quot;Do Something Here&quot;.
}</pre>
<p>This lets us loop over our array and do something with each item in turn. It&#8217;s not pretty, but it technically does the trick. </p>
<h3>jQuery Foreach Loops</h3>
<p>As with many things in the JavaScript world, jQuery makes the concept of a foreach loop simpler. To iterate over an array in jQuery, we&#8217;ll use the jQuery.each() (or in shorthand, $.each()) function. </p>
<!-- Quick Adsense WordPress Plugin: http://quicksense.net/ -->
<div style="float:none;margin:0px;">
<div class="adsert"><script type="text/javascript"><!--
google_ad_client = "ca-pub-3282985160484862";
/* Random In-Text Ad */
google_ad_slot = "5567245830";
google_ad_width = 468;
google_ad_height = 60;
//-->
</script>
<script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script></div>
</div>

<p><strong>Note:</strong> This is a different function than the more commonly known $(whatever_element).each(), and has slightly different usage!</p>
<p>The jQuery $.each() function works like this:</p>
<pre lang="javascript" escaped="true" line="1">myArray = new Array(&quot;item 1&quot;, &quot;item 2&quot;, &quot;item 3&quot;);
$.each(myArray, function() {
	this = &quot;Do Something Here&quot;;
});</pre>
<p>In short, we pass the $.each() function two parameters: the first is the array we want to iterate over, and the second is the function we want to perform on that array. Within the function, we simply refer to the current item as &#8220;this,&#8221; which is pretty standard fare.</p>
<p>I prefer the jQuery functionality for two reasons:</p>
<ol>
<li>It reads slightly more like a PHP foreach statement, and</li>
<li>I&#8217;m generally loading jQuery anyway, so there&#8217;s no harm in using it.</li>
</ol>
<p>Your needs may vary â€“ I&#8217;m not suggesting loading jQuery on an otherwise framework-free page just to make array loops easier. But if you&#8217;ve already got jQuery loaded, this might save you a bit of time (and in my case, frustration).</p>
<div id="crp_related" class="crp_related"><h3>Related Reading</h3><ul><li><a href="index.html?p=635"     class="crp_title">A JavaScript Currency Conversion Script</a></li><li><a href="index.html?p=761"     class="crp_title">Bouncing Balls in the HTML5 Canvas</a></li><li><a href="index.html?p=730"     class="crp_title">Simple Table Column Highlighting</a></li><li><a href="index.html?p=649"     class="crp_title">Making a Sphere in CSS</a></li><li><a href="index.html?p=704"     class="crp_title">Use a CSS Preprocessor</a></li></ul></div>
<div style="font-size:0px;height:0px;line-height:0px;margin:0;padding:0;clear:both"></div>			</div><!-- .entry-content -->
	<!-- AddThis Button BEGIN -->
<div class="addthis_toolbox addthis_default_style ">
<a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
<a class="addthis_button_tweet"></a>
<a class="addthis_button_google_plusone" g:plusone:size="medium"></a> 
<a class="addthis_counter addthis_pill_style"></a>
</div>
<script type="text/javascript">var addthis_config = {"data_track_addressbar":true};</script>
<script type="text/javascript" src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=rglazebrook"></script>
<!-- AddThis Button END --></article>

<div id="comments" class="comments-area">

	
			<h3 class="comments-title">
			22 Responses		</h3>
		<ol class="commentlist">
				<li class="comment even thread-even depth-1" id="li-comment-10652">
		<article id="comment-10652" class="comment">
			<img alt='' src='http://1.gravatar.com/avatar/1b3094b519daee876a12eff25adc1dec?s=100&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://ShaverAssociates.net' rel='external nofollow' class='url'>RobShaver</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-10652"><time datetime="2010-01-21T15:50:46+00:00">Jan. 21, 2010 @ 3:50 pm</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>Call me old fashion but I&#8217;ll take the &#8220;for&#8221; loop over a library call every time. Why? Because 1) well &#8230; no library needed, 2) I can see all the moving parts and I understand it completely and 3) I don&#8217;t have to write an anonymous function. If &#8220;foreach&#8221; is in the language like it is in PHP, then I&#8217;d use it.</p>
<p>Maybe it&#8217;s because I&#8217;ve been writing code for 30 years and old habits die hard. I&#8217;d kind of like the standard &#8220;for&#8221; loop is hard-wired into my spine by now.</p>
<p>Not to say you shouldn&#8217;t write articles like this. Gives everybody food for thought. Thanks for writing it.</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-10654">
		<article id="comment-10654" class="comment">
			<img alt='' src='http://0.gravatar.com/avatar/4b23283259a7706b371c3b60fa8e63aa?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn">Brandon </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-10654"><time datetime="2010-01-21T22:59:33+00:00">Jan. 21, 2010 @ 10:59 pm</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>Technically, if you are just needing a simple foreach in JavaScript you can use for(obj in ary).  So your JavaScript example would produce:</p>
<p>myArray = new Array(&#8220;item 1&#8243;, &#8220;item 2&#8243;, &#8220;item 3&#8243;);<br />
for(i in myArray){<br />
    myArray[i] = &#8220;Do Something Here&#8221;.<br />
}</p>
<p>Granted, this has some issues if you are using a library that mucks with the Array.prototype, but it is technically a foreach.</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-admin bypostauthor even thread-even depth-1" id="li-comment-10657">
		<article id="comment-10657" class="comment">
			<img alt='' src='http://1.gravatar.com/avatar/3042d8685dcce2d0a27009b0aa1b3073?s=100&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='index.html' rel='external nofollow' class='url'>Rob Glazebrook</a>  <span>(Author)</span> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-10657"><time datetime="2010-01-22T09:38:53+00:00">Jan. 22, 2010 @ 9:38 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>There&#8217;s nothing technically wrong with the &#8220;for&#8221; loop structure. I just have a hard time remembering it. I&#8217;m guessing if I&#8217;d learned JavaScript before PHP I&#8217;d feel the &#8220;foreach&#8221; loop was overkill or something. :)</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-admin bypostauthor odd alt thread-odd thread-alt depth-1" id="li-comment-10658">
		<article id="comment-10658" class="comment">
			<img alt='' src='http://1.gravatar.com/avatar/3042d8685dcce2d0a27009b0aa1b3073?s=100&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='index.html' rel='external nofollow' class='url'>Rob Glazebrook</a>  <span>(Author)</span> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-10658"><time datetime="2010-01-22T09:40:40+00:00">Jan. 22, 2010 @ 9:40 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>That&#8217;s a good point, Brandon. I was originally going to lead with that structure for my JavaScript example, but I discovered it has issues when running with jQuery. At least, I assume that was the problem: the array[i] syntax was returning a function, not a value. So I gave that line of programming up for now and went with the more well-known syntax.</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-10664">
		<article id="comment-10664" class="comment">
			<img alt='' src='http://0.gravatar.com/avatar/8081b26e05bb4354f7d65ffc34cbbd67?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://chriscoyier.net' rel='external nofollow' class='url'>Chris Coyier</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-10664"><time datetime="2010-01-22T14:04:15+00:00">Jan. 22, 2010 @ 2:04 pm</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>I was always told that you should set a variable to the myArray.length first, that way it doesn&#8217;t have to calculate that number on every iteration. And for some reason, ++i is faster that i++ I&#8217;ve been told, but I have no idea why.</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-10701">
		<article id="comment-10701" class="comment">
			<img alt='' src='http://0.gravatar.com/avatar/215e5c1e0226eefb0b41009423b16d16?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://tog000.com.ar' rel='external nofollow' class='url'>tog000</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-10701"><time datetime="2010-01-23T11:09:58+00:00">Jan. 23, 2010 @ 11:09 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>In my opinion, Mootools has the most powerful &#8220;foreach&#8221; emulation for Javascript:</p>
<p>myArray = new Array(&#8220;item&#8221;, &#8220;item&#8221;, &#8220;item&#8221;);<br />
myArray.each(function(element,index){<br />
    myArray[index] = element+index;<br />
})</p>
<p>This will produce: {&#8220;item0&#8243;,&#8221;item1&#8243;,&#8221;item2&#8243;}</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-10705">
		<article id="comment-10705" class="comment">
			<img alt='' src='http://0.gravatar.com/avatar/049d753b010db62acf0dd7725ea8f7db?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://walkblind.com' rel='external nofollow' class='url'>mike stevens</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-10705"><time datetime="2010-01-24T14:58:17+00:00">Jan. 24, 2010 @ 2:58 pm</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>Very nice article.  The cross language examples are insightful</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-10706">
		<article id="comment-10706" class="comment">
			<img alt='' src='http://0.gravatar.com/avatar/c6e01e6d60b3fff538af89181b80d11d?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://earlchaos.posterous.com' rel='external nofollow' class='url'>Frank Schenk</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-10706"><time datetime="2010-01-24T15:09:41+00:00">Jan. 24, 2010 @ 3:09 pm</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>What&#8217;s wrong with Brandons example? It works perfectly and it doesn&#8217;t require a bloated library like jquery.</p>
<p>for() is btw much faster than foreach in php, if the maximum number is given as variable, not as function, thats the problem with foreach, as it always has to check the content of the given array.</p>
<p>so:<br />
$max = count( $array);<br />
for( $i=0; $&lt;$max; $i++){<br />
  $array[$i] = &#039;Do whatever you want to do&#039;;<br />
}</p>
<p>is way faster than foreach.</p>
<p>cheers, Frank</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment byuser comment-author-admin bypostauthor even thread-even depth-1" id="li-comment-10762">
		<article id="comment-10762" class="comment">
			<img alt='' src='http://1.gravatar.com/avatar/3042d8685dcce2d0a27009b0aa1b3073?s=100&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='index.html' rel='external nofollow' class='url'>Rob Glazebrook</a>  <span>(Author)</span> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-10762"><time datetime="2010-01-25T10:27:15+00:00">Jan. 25, 2010 @ 10:27 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>Hi Frank,</p>
<p>My only concern with Brandon&#8217;s example is that if you ~do~ happen to be using a library like jQuery (and that&#8217;s a growing percentage of the web populace), that structure can give you problems. I tested it for the purposes of this article and array[i] was returning a function, not the array string I was expecting.</p>
<p>So, if you&#8217;re not using jQuery or a similar framework, and never plan to use a JavaScript framework on your pages, by all means go with that system. But if you&#8217;re already using jQuery or another framework for something else, you may run into problems!</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-11113">
		<article id="comment-11113" class="comment">
			<img alt='' src='http://1.gravatar.com/avatar/55af02ec22fd4005261ed2088534f194?s=100&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://webdeavour.co.uk' rel='external nofollow' class='url'>Lee Kowalkowski</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-11113"><time datetime="2010-02-03T07:29:47+00:00">Feb. 3, 2010 @ 7:29 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>You only need to cache the array length if the array is actually a DOM collection (e.g. element.childNodes).  JS for(&#8230; in &#8230;) won&#8217;t work cross browser over DOM collections anyway &#8211; because some browsers include the length property and will use that as one of the iterations.</p>
<p>You need for(&#8230; in &#8230;) to iterate through properties of an object though, therefore I&#8217;d never advise modifying Array.prototype.  E.g:</p>
<p>var a = [];<br />
a["key1"] = &#8220;value1&#8243;;<br />
a["key2"] = &#8220;value2&#8243;;</p>
<p>.. if Array.prototype has been modified, it makes things more difficult.</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-11181">
		<p>Pingback: <a href='http://informativecomputersolutions.com/mikecapson-blog/?p=318' rel='external nofollow' class='url'>Mike Capson &raquo; Blog Archive &raquo; How To Create Simple, Stylish and Swappable Image Captions</a> </p>
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-11190">
		<p>Pingback: <a href='http://blog.informativecomputersolutions.com/?p=314' rel='external nofollow' class='url'>Saint John Web Design | Informative Computer Solutions &raquo; Blog Archive &raquo; Running jQuery with Other Frameworks Via noConflict</a> </p>
	</li><!-- #comment-## -->
	<li class="pingback even thread-even depth-1" id="comment-11196">
		<p>Pingback: <a href='http://blog.informativecomputersolutions.com/?p=318' rel='external nofollow' class='url'>Saint John Web Design | Informative Computer Solutions &raquo; Blog Archive &raquo; How To Create Simple, Stylish and Swappable Image Captions</a> </p>
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-11199">
		<p>Pingback: <a href='http://blog.informativecomputersolutions.com/?p=320' rel='external nofollow' class='url'>Saint John Web Design | Informative Computer Solutions &raquo; Blog Archive &raquo; Build a Bare-Bones WordPress 2.8+ Widget</a> </p>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-13187">
		<article id="comment-13187" class="comment">
			<img alt='' src='http://0.gravatar.com/avatar/8c51a0290a9bccc5b1cf0254c68a8d6c?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://greggman.com' rel='external nofollow' class='url'>gman</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-13187"><time datetime="2011-01-11T16:59:39+00:00">Jan. 11, 2011 @ 4:59 pm</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>Maybe the wrong place to put this but in answer to Chris&#8217;s question</p>
<p>The difference between i++ and ++i is as follows.</p>
<p>The meaning of i++ is</p>
<p>   var temp = i; i = i + 1; return temp;</p>
<p>the meaning of ++i is</p>
<p>   i = i + 1; return i;</p>
<p>It&#8217;s the creation of that temp that *may* take more time. In JavaScript I suspect most modern browsers can optimize away the need for temp unless you are using it. But ++ comes from C/C++ and in C++ the creation of temp might be some complex type and have side effects.</p>
<p>So, best to just get in the habit of coding what you mean. If you want to increment i then use ++i. If you want to both increment i and get the result before you incremented it than use i++.</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-13649">
		<article id="comment-13649" class="comment">
			<img alt='' src='http://1.gravatar.com/avatar/5966b0f16ccf9433684e98dc00cee62b?s=100&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://jibbery.com' rel='external nofollow' class='url'>Joel Selvadurai</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-13649"><time datetime="2011-11-02T14:52:55+00:00">Nov. 2, 2011 @ 2:52 pm</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>Much better to use:</p>
<p>for(var i in array) {</p>
<p>   			array[i] = &#8216;whatever&#8217;;</p>
<p>		}</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-14043">
		<article id="comment-14043" class="comment">
			<img alt='' src='http://0.gravatar.com/avatar/45687cf8dc439678b653367f2b19451e?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn">Al Jey </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-14043"><time datetime="2012-03-31T03:32:19+00:00">Mar. 31, 2012 @ 3:32 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>The most efficient way to loop through array elements is like so:</p>
<p>var arr=[5,4,3,2,1,0],<br />
    i=arr.length;<br />
for(;i&#8211;;){<br />
    console.log(arr[i])<br />
}</p>
<p>Both variables are local, cached and there is minimum evaluation.<br />
The only thing to note here is that the loop starts at the end of an array.</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="pingback odd alt thread-odd thread-alt depth-1" id="comment-14171">
		<p>Pingback: <a href='http://yournextleap.com/blog/javascript-interview-questions/' rel='external nofollow' class='url'>JavaScript Interview Questions &amp; Answers: YourNextLeap</a> </p>
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-14193">
		<article id="comment-14193" class="comment">
			<img alt='' src='http://0.gravatar.com/avatar/23b28d5d26f2f9191ec262d54cb948a8?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn">Paul Mc Galey </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-14193"><time datetime="2012-08-02T07:14:34+00:00">Aug. 2, 2012 @ 7:14 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>I&#8217;m surprised no-one has pointed out that this doesn&#8217;t actually work! Specifically,</p>
<p>this = &#8220;Do Something Here&#8221;;</p>
<p>is illegal and throws an error &#8211; you can&#8217;t assign to &#8216;this&#8217;, and even if you could, you wouldn&#8217;t expect it to modify the original array (as &#8216;this&#8217; would be a reference to the string object, not into the array). You *can&#8217;t* modify an array in-place with jQuery.each().</p>
<p>If you don&#8217;t mind creating a new array and really want to use jQuery you could use jQuery.map() like this:</p>
<p>myArray = new Array(&#8220;item 1&#8243;, &#8220;item 2&#8243;, &#8220;item 3&#8243;);<br />
myArray = $.map(myArray, function() {<br />
    return &#8220;Do Something Here&#8221;;<br />
});</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-14224">
		<article id="comment-14224" class="comment">
			<img alt='' src='http://1.gravatar.com/avatar/12d200eb8e7ab92eb64a57aca7d1e95c?s=100&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://www.balajiwebsolution.com' rel='external nofollow' class='url'>manoj</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-14224"><time datetime="2012-08-20T07:14:57+00:00">Aug. 20, 2012 @ 7:14 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>thanks for provide notes&#8230; nice</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment even thread-even depth-1" id="li-comment-14314">
		<article id="comment-14314" class="comment">
			<img alt='' src='http://1.gravatar.com/avatar/b98a12a58e539c7cdd9871217a9d30fb?s=100&amp;d=http%3A%2F%2F1.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn"><a href='http://www.forkoff.co.uk/' rel='external nofollow' class='url'>Rob @ Forkoff</a> </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-14314"><time datetime="2012-10-22T05:33:32+00:00">Oct. 22, 2012 @ 5:33 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>I&#8217;d certainly agree with tog000 on this one. I find MooTools to be my personal favorite JS framework anyway, but regardless, their &#8220;.each()&#8221; method of traversing arrays is by far the nicest to work with.</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
	<li class="comment odd alt thread-odd thread-alt depth-1" id="li-comment-15360">
		<article id="comment-15360" class="comment">
			<img alt='' src='http://0.gravatar.com/avatar/4f551e57546d3b6b37d0e7a444666a1d?s=100&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D100&amp;r=G' class='avatar avatar-100 photo' height='100' width='100' />			<header class="comment-meta comment-author vcard">
				<cite class="fn">JÃºnior </cite><a href="emulate-a-foreach-loop-in-javascript/comment-page-1/index.html#comment-15360"><time datetime="2013-07-08T09:59:31+00:00">Jul. 8, 2013 @ 9:59 am</time></a>				<span class="reply">
							</span><!-- .reply -->
			</header><!-- .comment-meta -->

			
			<section class="comment-content comment">
				<p>The right way is</p>
<p>var i, k;<br />
for ( i = 0, k = var.length; i &lt; k; i++ ) {<br />
   // code;<br />
}</p>
<p>Or:</p>
<p>array.forEach(function(argument_name){<br />
    console.log(argument_name);<br />
});</p>
							</section><!-- .comment-content -->

			
		</article><!-- #comment-## -->
	</li><!-- #comment-## -->
		</ol><!-- .commentlist -->

		
		
	
									<div id="respond" class="comment-respond">
				<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="index.html?p=511#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://www.cssnewbie.com/wp-comments-post.php" method="post" id="commentform" class="comment-form">
																			<p class="comment-notes">Your email address will not be published. Required fields are marked <span class="required">*</span></p>							<p class="comment-form-author"><label for="author">Name <span class="required">*</span></label> <input id="author" name="author" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-email"><label for="email">Email <span class="required">*</span></label> <input id="email" name="email" type="text" value="" size="30" aria-required='true' /></p>
<p class="comment-form-url"><label for="url">Website</label> <input id="url" name="url" type="text" value="" size="30" /></p>
												<p class="comment-form-comment"><label for="comment">Comment</label> <textarea id="comment" name="comment" cols="45" rows="8" aria-required="true"></textarea></p>						<p class="form-allowed-tags">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes:  <code>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </code></p>						<p class="form-submit">
							<input name="submit" type="submit" id="submit" value="Post Comment" />
							<input type='hidden' name='comment_post_ID' value='511' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
						</p>
						<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="2701724bf3" /></p>

	<p style="clear: both;" class="subscribe-to-comments">
	<input type="checkbox" name="subscribe" id="subscribe" value="subscribe" style="width: auto;" />
	<label for="subscribe">Follow the conversation! Subscribe to these comments via e-mail.</label>
	</p>


					</form>
							</div><!-- #respond -->
			
</div><!-- #comments .comments-area --></div>

		<div class="col-1-3 sidebar" role="complementary">
		<div id="text-3" class="widget widget_text">			<div class="textwidget"><!-- BuySellAds Zone Code -->
<div id="bsap_1283881" class="bsarocks bsap_3de9dd67d1e9d49a7cec8c1a10bdb917"></div>
<!-- End BuySellAds Zone Code --></div>
		</div><div id="dsgnwrks_google_top_posts_widgets-2" class="widget google_top_posts"><h3 class="widget-title">Popular on CSS Newbie</h3>
<!-- using transient -->
<ol><li><a href="index.html?p=444">A Super Simple Horizontal Navigation Bar</a></li><li><a href="index.html?p=59">Using the CSS @import Rule</a></li><li><a href="example/showhide-content/index.html">CSS Newbie Example: Show/Hide Content</a></li><li><a href="easy-css-dropdown-menu/index.html">Easy CSS Dropdown Menus</a></li><li><a href="example/horizontal-menu/index.html">CSS Newbie Example: Super Simple Horizontal Navigation Bar</a></li></ol>
<!-- using transient -->
</div><div id="sticky-posts-2" class="widget widget_ultimate_posts"><h3 class="widget-title">From the Archives</h3><ul>
          <li class="">

            
            <div class="upw-content">

                              <p class="post-title">
                  <a href="index.html?p=59" title="Permalink to: Using the CSS @import Rule">
                    Using the CSS @import Rule                  </a>
                </p>
              
              
              
                              <p class="post-excerpt">Even the most complex style sheet starts out with a single rule. But when you&#8217;re working on a particularly massive and complex website, over time... <a href="index.html?p=59" class="more-link" title="Permalink to: Using the CSS @import Rule">Read more â†’</a></p>
              
              
              
              
              
            </div>

          </li>

        </ul></div><div id="scfw-2" class="widget scfw"><h3 class="widget-title">Keep in Touch</h3><ul class="scfw_text_img" style="list-style:none;margin:0;padding:0;"><li style="background:url('wp-content/plugins/subscribe-connect-follow-widget/images/16px/feedburner.png') no-repeat 0% 50%;padding-left:20px;font-size:14px;"><a href="about/feed/index.html" title="Subscribe to RSS Feed">RSS Feed</a></li><li style="background:url('wp-content/plugins/subscribe-connect-follow-widget/images/16px/email.png') no-repeat 0% 50%;padding-left:20px;font-size:14px;"><a href="http://feedburner.google.com/fb/a/mailverify?uri=cssnewbie" title="Subscribe to posts via Email">Subscribe via Email</a></li><li style="background:url('wp-content/plugins/subscribe-connect-follow-widget/images/16px/twitter.png') no-repeat 0% 50%;padding-left:20px;font-size:14px;"><a href="http://twitter.com/robbyg" title="Follow robbyg on Twitter">Twitter</a></li><li style="background:url('wp-content/plugins/subscribe-connect-follow-widget/images/16px/google-plus.png') no-repeat 0% 50%;padding-left:20px;font-size:14px;"><a href="https://plus.google.com/101980389733151181460" title="Google+">Google+</a></li></ul></div><div id="text-4" class="widget widget_text">			<div class="textwidget"><script async src="http://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- Responsive Sidebar Ad -->
<ins class="adsbygoogle"
     style="display:block"
     data-ad-client="ca-pub-3282985160484862"
     data-ad-slot="3973803031"
     data-ad-format="auto"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>
		</div>		</div><!-- .sidebar -->        </div> <!-- End .content -->
        <footer class="grid grid-pad" role="contentinfo">
        	<div class="col-2-3">
        		<img src="wp-content/themes/cssnewbie_v4/img/rob_change_launch_200x200.jpg" alt="" class="profilePic" />
	        	<p>CSS Newbie has been authored and maintained by Rob Glazebrook since 2007. Rob lives and works in beautiful Des Moines, Iowa.</p>
	        	<p>In addition to writing on CSS Newbie, Rob works for <a href="http://www.vocecommunications.com/">Voce Communications</a>, brews beer, raises chickens, runs, rows crew, and has adventures.</p>
	        	<p>If you would like to contact Rob about a speaking engagement, freelance work, or excess beer disposal, please <a href="index.html?p=6">use the contact form here.</a> If you have a question about a specific article, you would be better off posting a comment on the article itself.</p>
	        	<p>
        	</div>
        	<div class="col-1-3">
        		<ul>
        			<li><a href="index.html?p=253">Advertise on CSS Newbie</a></li>
        			<li><a href="index.html?p=250">Table of Contents</a></li>
        			<li><a href="http://feeds.feedburner.com/cssnewbie/">Subscribe</a></li>
        			<li><a href="index.html?p=6">Contact Rob</a></li>
        			<li><a href="index.html?p=511#top">(back to the top)</a></li>
        		</ul>
        	</div>
        </footer>
    </div>
	
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js" type="text/javascript"></script>
<script src="wp-content/themes/cssnewbie_v4/js/cssnewbie.js"></script>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-2285776-3']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>

</body>
</html>

<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Page Caching using disk: enhanced
Object Caching 1024/1103 objects using disk

 Served from: www.cssnewbie.com @ 2014-03-10 16:58:01 by W3 Total Cache -->